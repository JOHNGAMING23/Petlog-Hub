local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/realredz/RedzLibV5/refs/heads/main/Source.lua"))()

local Window = redzlib:MakeWindow({"Petlog Hub | Premium Version", "By John", "testando-redzLibv5.json"})
Window:AddMinimizeButton({
  Button = { Image = redzlib:GetIcon("rbxassetid://15298567397"), BackgroundTransparency = 0 },
  Corner = { CornerRadius = UDim.new(0, 6) }
})

-- Tabs
local Tab1 = Window:MakeTab({"Main", "Home"})
local Tab2 = Window:MakeTab({"Player", "User"})
local Tab3 = Window:MakeTab({"Hitbox", "Sword"})
local Tab4 = Window:MakeTab({"GEF", "Buildingu"})
local Tab5 = Window:MakeTab({"Natural disaster", "Map"})
local Tab6 = Window:MakeTab({"Script", "List"})
local Tab7= Window:MakeTab({"Instructions", "Package"})
local Tab8 = Window:MakeTab({"Update log", "Mail"})
local Tab9 = Window:MakeTab({"Misc", "Setting"})

-- Add a section and a paragraph
Tab1:AddSection({"About FE Roblox script"})
Tab1:AddParagraph({
    Name = " Home Paragraph",
    Text = "The FE Roblox emote script is not mine I just see it in YouTube so I add the script here Credits to owner:D"
})

-- Print hello world on button press
Tab1:AddButton({"Print button", function()
    print("Hello World!")
end})

-- Function to apply custom zombie animations
local function applyZombieAnimations(plr)
    local Animate = plr.Character:WaitForChild("Animate")
    Animate.Disabled = true

    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=3489171152"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=3489171152"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=3489174223"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=3489173414"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=616161997"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=616156119"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=616157476"

    plr.Character.Humanoid:ChangeState(3)
    Animate.Disabled = false
end

-- Function to apply custom toy animations
local function applyToyAnimation(plr)
    local Animate = plr.Character:WaitForChild("Animate")
    Animate.Disabled = true

    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=782843345"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"

    plr.Character.Humanoid:ChangeState(3)
    Animate.Disabled = false
end

-- Function to apply custom toy2 animations
local function applyToy2Animation(plr)
    local Animate = plr.Character:WaitForChild("Animate")
    Animate.Disabled = true

    Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
    Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782845736"
    Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=3489174223"
    Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=782842708"
    Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=782847020"
    Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=782843869"
    Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=782846423"

    plr.Character.Humanoid:ChangeState(3)
    Animate.Disabled = false
end


-- Ensure custom animations apply after respawn
local plr = game.Players.LocalPlayer
plr.CharacterAdded:Connect(function()
    applyZombieAnimations(plr)
end)

-- Button to manually apply zombie animations
Tab1:AddButton({"Activate Zombie Animations", function()
    applyZombieAnimations(plr)
end})

-- Button to manually apply toy animations
Tab1:AddButton({"Activate Toy Animations", function()
    applyToyAnimation(plr)
end})

-- Button to manually apply toy2 animations
Tab1:AddButton({"Petlog Animation pack", function()
    applyToy2Animation(plr)
end})


-- Button to FE Emote Roblox script
Tab1:AddButton({"FE free Roblox emote script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/AllEmotes"))()
end})

-- Toggle for Walkspeed
local InfiniteJumpEnabled = false
local jumpConnection

Tab2:AddToggle({
    Name = "Infinite Jumps",
    Default = false,
    Callback = function(state)
        InfiniteJumpEnabled = state
        
        if InfiniteJumpEnabled then
            -- Connect the event
            jumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
                game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState("Jumping")
            end)
        else
            -- Disconnect the event
            if jumpConnection then
                jumpConnection:Disconnect()
                jumpConnection = nil
            end
        end
    end    
})

-- Slider for jump power
Tab2:AddSlider({
    Name = "Jump Power slider",
    Min = 1,
    Max = 500,
    Default = 50,
    Callback = function(Value)
        jumpPowerValue = Value
        print("Slider Value Updated:", Value)

        local player = game.Players.LocalPlayer
        if not player then
            warn("LocalPlayer not found!")
            return
        end

        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character and character:FindFirstChildOfClass("Humanoid")

        if humanoid then
            humanoid.JumpPower = Value
            print("JumpPower set to:", Value)
        else
            warn("Humanoid not found!")
        end
    end
})



-- Slider for Speed
Tab2:AddSlider({
    Name = "Speed",
    Min = 1,
    Max = 400,
    Default = 16,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

-- Add a section and a paragraph
Tab3:AddSection({"Hitbox Tab"})
Tab3:AddParagraph({
    Name = "Hitbox Paragraph",
    Text = "This is where you can activate Hitbox also Change the Hitbox size using Textbox or Slider"
})

-- Slider for Hitbox Transparency
Tab3:AddSlider({
    Name = "Hitbox Transparency",
    Min = 0.1,
    Max = 1,
    Default = 0.5,
    Callback = function(Value)
        _G.Transparency = Value
    end
})

-- Slider for Hitbox Size
Tab3:AddSlider({
    Name = "Hitbox Size",
    Min = 0.1,
    Max = 50,
    Default = 16,
    Callback = function(Value)
        _G.HeadSize = Value 
    end
})

-- Button to Activate Hitbox
Tab3:AddButton({
    Name = "Activate Hitbox",
    Callback = function()
        _G.Disabled = true
        game:GetService('RunService').RenderStepped:Connect(function()
            if _G.Disabled then
                for _, v in ipairs(game:GetService('Players'):GetPlayers()) do
                    if v.Name ~= game.Players.LocalPlayer.Name then
                        pcall(function()
                            local humanoidRootPart = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
                            if humanoidRootPart then
                                humanoidRootPart.Size = Vector3.new(_G.HeadSize or 16, _G.HeadSize or 16, _G.HeadSize or 16)
                                humanoidRootPart.Transparency = _G.Transparency or 0.5
                                humanoidRootPart.BrickColor = BrickColor.new("Bright red") -- Corrected line
                                humanoidRootPart.Material = Enum.Material.Neon
                                humanoidRootPart.CanCollide = false
                            end
                        end)
                    end
                end
            end
        end)
    end
})

Tab3:AddSection({"Hitbox Size Slider"})
-- Hitbox slider
Tab3:AddSlider({
    Name = "Hitbox size",
    Min = 1,
    Max = 50,
    Default = 16,
    Callback = function(Value)  -- Use 'Value' instead of 'value'
        local size = tonumber(Value)  -- Use 'Value' here too
        if size then
            _G.HeadSize = size
            -- Hitbox size changed successfully (No notification)
        else
            -- Error handling if needed (No notification)
        end
    end
})


Tab3:AddButton({"Set Hitbox color to blue", function()
    print("Hello World!")
end})

Tab3:AddButton({"Set Hitbox color to black", function()
    print("Hello World!")
end})

Tab3:AddButton({"Set Hitbox color to Red", function()
    humanoidRootPart.BrickColor = BrickColor.new("Bright red")
end})

Tab3:AddButton({"Set Hitbox color to White", function()
    print("Hello World!")
end})






Tab4:AddSection({"GEF TAB"})














Tab5:AddSection({"Natural disasters tab"})














Tab6:AddSection({"Script Section"})
local Paragraph = Tab6:AddParagraph({
    Name = "Script Paragraph",
    Text = "Script tab this is where you can use other Script also all the script that i made  btw the other script is not mine i just added here"
})

Tab6:AddSection({"MOST USEFUL SCRIPT FOR ME"})

Tab6:AddButton({"Infinite yield", function()
    print("Hello World!")
end})

Tab6:AddButton({"Shift lock", function()
    print("Hello World!")
end})

Tab6:AddButton({"Auto aim lock", function()
    print("Hello World!")
end})

Tab6:AddButton({"Equip skins from your Roblox account", function() loadstring(game:HttpGet("https://raw.githubusercontent.com/JOHNGAMING23/Petlog-Hub/refs/heads/main/Skin%20Chooses"))()
end})

Tab6:AddButton({"Broken System Script", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script"))()
end})

Tab6:AddButton({"Jump Script", function() loadstring(game:HttpGet("https://pastefy.app/8XMVXGz8/raw"))()
end})

Tab6:AddButton({"Build a boat Script", function()
    print("Hello World!")
end})

Tab6:AddButton({"Fly Gui", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/JOHNGAMING23/Fly-gui/main/Fly gui script"))()
end})

Tab6:AddButton({"Nameless admin script", function()
    print("Hello World!")
end})




































Tab7:AddSection({"How to use?"})
Tab8:AddSection({"About update"})





























Tab9:AddSection({"Setting"})
local Paragraph = Tab9:AddParagraph({
    Name = "Settings Paragraph",
    Text = "Setting tab this is where you can Server hop or Rejoin or Join to other server using Job id and others"
})

Tab9:AddSection({"Join to another Server using Job id"})
Tab9:AddTextBox({
    Name = "Job ID",
    Default = "",
    TextDisappear = true,
    Callback = function(v)
	    _G.Job = v
		print(v)
    end
})

Tab9:AddButton({"Join Server", function()
game:GetService("TeleportService"):TeleportToPlaceInstance(game.placeId,_G.Job, game.Players.LocalPlayer)
end})

Tab9:AddSection({"Don't Know what is Job id? Go to Instructions tab"})

Tab9:AddButton({"COPY THE SERVER ID", function()
    setclipboard(tostring(game.JobId))
end})

Tab9:AddSection({"Rejoin and Server Hop"})

-- Rejoin button 
Tab9:AddButton({
    Name = "Rejoin",
    Callback = function()
        Window:Dialog({
            Title = "Confirm Rejoin",
            Text = "Are you sure you want to rejoin?",
            Options = {
                {"Confirm", function()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)
                end},
                {"Cancel", function() 
                    print("Rejoin canceled.")
                end}
            }
        })
    end
})

Tab9:AddSection({""})

-- ServerHop Button 
Tab9:AddButton({
    Name = "Server Hop",
    Callback = function()
        Window:Dialog({
            Title = "Confirm Server Hop",
            Text = "Are you sure you do you want to server hop?",
            Options = {
                {"Confirm", function()
                    local HttpService = game:GetService("HttpService")
                    local TeleportService = game:GetService("TeleportService")
                    local Player = game.Players.LocalPlayer

                    local function serverHop()
                        local gameId = game.PlaceId
                        local servers = {}

                        -- Get the server list
                        local success, result = pcall(function()
                            return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..gameId.."/servers/Public?sortOrder=Desc&limit=100"))
                        end)

                        if success and result and result.data then
                            for _, server in ipairs(result.data) do
                                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                                    table.insert(servers, server.id)
                                end
                            end

                            -- Teleport to a random server
                            if #servers > 0 then
                                TeleportService:TeleportToPlaceInstance(gameId, servers[math.random(1, #servers)], Player)
                            else
                                warn("No available servers found.")
                            end
                        else
                            warn("Failed to get server list.")
                        end
                    end

                    -- Call the function to hop to another server
                    serverHop()
                end},
                {"Cancel", function() end}
            }
        })
    end
})

Tab9:AddButton({
    Name = "Server Hop to Lo player Server",
    Callback = function()
        Window:Dialog({
            Title = "Confirm Server Hop",
            Text = "Are you sure you do you want to server hop in low player server?",
            Options = {
                {"Confirm", function()
                    local HttpService = game:GetService("HttpService")
                    local TeleportService = game:GetService("TeleportService")
                    local Player = game.Players.LocalPlayer

                    local function serverHop()
                        local gameId = game.PlaceId
                        local servers = {}

                        -- Get the server list
                        local success, result = pcall(function()
                            return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..gameId.."/servers/Public?sortOrder=Desc&limit=100"))
                        end)

                        if success and result and result.data then
                            for _, server in ipairs(result.data) do
                                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                                    table.insert(servers, server.id)
                                end
                            end

                            -- Teleport to a random server
                            if #servers > 0 then
                                TeleportService:TeleportToPlaceInstance(gameId, servers[math.random(1, #servers)], Player)
                            else
                                warn("No available servers found.")
                            end
                        else
                            warn("Failed to get server list.")
                        end
                    end

                    -- Call the function to hop to another server
                    serverHop()
                end},
                {"Cancel", function() end}
            }
        })
    end
})

